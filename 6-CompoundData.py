########################################################################################################################
#
# № 2 - Точки
#
# src/points.py
#
# Реализуйте следующие функции для работы с точками:
#
#     get_quadrant — функция, которая вычисляет квадрант, где находится точка. Ниже приведена схема, показывающая
#     номера квадрантов на плоскости
#
#            +
#          2 | 1
#            |
#    +----------------+
#            |
#          3 | 4
#            +
#
#    >>> point1 = points.make(1, 5)
#    >>> get_quadrant(point1)
#    1
#    >>> point2 = points.make(1, 5)
#    >>> get_quadrant(point2)
#    4
#
# Если точка не принадлежит ни одному квадранту (т.е., если она лежит хотя бы на одной из осей координат), то функция
# должна возвращать None:
#
#    >>> point1 = points.make(0, 7)
#    >>> get_quadrant(point1) is None
#    True
#    >>> point2 = points.make(2, 0)
#    >>> get_quadrant(point2) is None
#    True
#
#     get_symmetrical_point — функция, возвращающая новую точку, симметричную относительно начала координат. Такая
#     симметричность означает, что меняются знаки у x и y
#
#    >>> points.to_string(get_symmetrical_point(points.make(1, 5)))
#    '(-1, -5)'
#
#     calculate_distance — функция, вычисляющая расстояние между точками по формуле: d = √((x₂−x₁)²+(y₂−y₁)²)
#
#    >>> calculate_distance(
#    ...     points.make(3, 2),
#    ...     points.make(-1, -1))
#    ... )
#    5.0
#
# SOLUTION:

#
########################################################################################################################
